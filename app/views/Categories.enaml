from enaml.core.api import Looper
from enaml.widgets.api import Window, Container, Label, PushButton, Form, Field, GroupBox
from events import Events
from views.Category import CategoryView
from api.CategoryService import CategoryService

class CategoryEvents(Events):
    __events__ = ('on_change')

def handleOnChanged(val,cond,col):
    if cond: 
        return col.push(val).distinct()
        # ctx.pb_delete.enable()
    else:
        return col.filter(lambda x: x != val)
        # if selectedValues.length == 0: 
        #     ctx.pb_delete.disable()

enamldef CategoriesView(Container):
    attr values = CategoryService.list()
    attr selectedValues = ()
    attr saveFunc = lambda _ : print('TODO: Implement Save')
    Container:
        GroupBox:
            title = 'Categories'
            Looper:
                iterable << values
                CategoryView:
                    value = loop.item
                    events = CategoryEvents
                text = '&Delete'
                clicked :: print('TODO: Implement')
        GroupBox:
            title = 'New Category'
            Form:
                Label:
                    text = 'Name'
                Field:
                    pass
                PushButton:
                    text = '&Create'
                    clicked :: saveFunc()
